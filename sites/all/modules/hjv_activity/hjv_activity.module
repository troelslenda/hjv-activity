<?php 

function hjv_activity_menu(){
    $items['addguid'] = array(
      'page callback' => 'hjv_activity_add_activity_from_guid',
      'title' => t('Add activity tracker'),
      'access arguments' => array('create activity content'),
    );
    $items['node/%node/reset_activity'] = array(
      'page callback' => 'hjv_activity_reset_activity',
      'page arguments' => array(1),
      'title' => t('Hent deltagere'),
      #'type' => MENU_LOCAL_TASK,
      'access arguments' => array('create activity content'),
    );
  return $items;
}
function hjv_activity_reset_activity($node){
  if($node->type != 'activity'){
    drupal_set_message(t('Det var ikke en aktivitet'),'error');
    drupal_goto('node/'.$node->nid);
    return;
  }
  
  $insertFields = array(
  	'aid' => $node->nid,
  	'type' => 'participant',
  	'updatetime' => 100,
  );
  
  db_query('DELETE FROM {hjv_auth_scrape_queue} WHERE aid = %d AND type = "%s"', $node->nid,$insertFields['type']);
  drupal_write_record('hjv_auth_scrape_queue',$insertFields);
    
  hjv_auth_scrape_fetch_hjv();
  drupal_set_message(t('Aktiviteten er opdateret!'));
  drupal_goto('node/'.$node->nid);
 # return $nid;
}

function hjv_activity_add_activity_from_guid(){
  return drupal_get_form('hjv_activity_add_activity_form');
}


function hjv_activity_add_activity_form($form_state){
  $form = array();
  $form['guid'] = array(
    '#title' => t('Identifier'),
    '#type' => 'textfield',
    '#maxlength' => 1000,
    '#description' => t('Indtast et link indeholdende GUID for aktiviteten. <a rel="lightvideo[|width:599px; height:474px;]" href="/sites/default/files/2010-10-24_1728.swf">Se video</a> for instruktion.'),
  );
    $form['mandatory'] = array(
    '#type' => 'checkbox',
    '#title' => ('Afsend tilmeldings reminder'),
    '#description' => t('Hvis feltet er valgt vil der med ekspontentiel frekvens blive afsendt emails (måske sms\'er) til restanter!'),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Tilføj aktivitet'),
   );
  $form['#validate'] = array('hjv_activity_add_validate');
  $form['#submit'] = array('hjv_activity_add_submit');
  
  return $form;
}

function hjv_activity_add_submit($form,&$form_state){
  preg_match('/[A-Z0-9]{8}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{12}/i', $form_state['values']['guid'],$results);
  
  
  $node = new StdClass();
  
  $node->field_guid[0]['value'] = $results[0];
  $node->type = 'activity';
  $node->title = 'awaiting update';
  $node->status = 1;
  node_save($node);
  
  $fields = array(
  	'type' => 'activity',
    'aid' => $node->nid,
    'updatetime' => 100 
  );
  drupal_write_record('hjv_auth_scrape_queue',$fields);
  $fields['type'] = 'participant';
  drupal_write_record('hjv_auth_scrape_queue',$fields);
  
  
  
  drupal_set_message('Aktiviten er oprettet. Der kan gå et par minutter inden den bliver hentet fra hjv.dk');
  return true;
}

function hjv_activity_add_validate($form,&$form_state){
  
  // check wether link contains a valid GUID
  if (!(preg_match('/[A-Z0-9]{8}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{12}/i', $form_state['values']['guid'],$results))) {
    form_set_error('guid',t('Du er nødt til at indsætte et link indeholdende GUID. Har du problemer så <a rel="lightvideo[|width:599px; height:474px;]" href="/sites/default/files/2010-10-24_1728.swf">se instruksions videoen</a>'));
  }

  // check wether GUID already exist in activity
  if(node_load_from_guid($results[0])){
    form_set_error('guid',t('Aktiviteten med GUID=%guid findes allerede i systemet!',array('%guid' => $results[0])));
  }
}

function node_load_from_guid($guid){
  $res = db_query('SELECT nid FROM {content_type_activity} WHERE field_guid_value = "'.$guid.'"');
  return node_load(db_result($res));
}
function hjv_activity_form_alter(&$form,&$form_state,$form_id){
  #var_dump($form_id);
  if($form_id == 'activity_node_form'){
    $form['force_update'] = array(
      '#type' => 'checkbox',
      '#title' => t('Gennemtving opdatering'),
      '#weight' => 1000,
      '#decription' => t('Hvis du har brug for at opdatere aktiviteten eller deltagere kan denne boks tjekkes af og aktiviteten og deltagerne opdateres med det samme')
    );
    $form['#submit'][] = 'hjv_activity_save_submit';
  }
}
function hjv_activity_save_submit($form,&$form_state){
  if($form_state['values']['force_update']){
    $insertFields = array(
    	'aid' => $form_state['values']['nid'],
    	'type' => 'activity',
    	'updatetime' => 100,
    );
    db_query('DELETE FROM {hjv_auth_scrape_queue} WHERE aid = %d', $form_state['values']['nid']);
    drupal_write_record('hjv_auth_scrape_queue',$insertFields);
    $insertFields['type'] = 'participant';
    drupal_write_record('hjv_auth_scrape_queue',$insertFields);
  }
}
function hjv_activity_theme($existing, $type, $theme, $path){  
  return array(
    'hjv_member_matrix' => array(
      'arguments' => array('users' => NULL, 'attendees' => FALSE, 'absentees' => FALSE),
      #'template' => 'node',
    ),
    'hjv_user_line' => array(
      'arguments' => array('user' => NULL,'function' => '','status' => ''),
      #'template' => 'node',
    ),
  );
}

function theme_hjv_user_line($user,$function,$status){
  if(!$user){
    $status = 'nouser';
  }
  return '<div class="'.$status.'"><p class="func">'.$function.'</p><p class="name">'.theme('username',$user).'</p></div>';
}

function theme_hjv_member_matrix($users,$attendees,$absentees){
  
  $cleaned_attendees = array();
  $cleaned_absentees = array();
  
  if(is_array($attendees)){
    foreach($attendees as $attendee){
      $cleaned_attendees[] = $attendee['uid'];
    }
  }
  if(is_array($absentees)){
    foreach($absentees as $absentee){
      $cleaned_absentees[] = $absentee['uid'];
    }
  }
 /* if(is_array($users)){
    foreach($users as $u){
      $user = user_load($u['uid']);
      if(@in_array($u['uid'],$cleaned_attendees)){
        $status = 'go';
      }
      else if(@in_array($u['uid'],$cleaned_absentees)){
        $status = 'nogo';
      }
      else{
        $status = 'dontknow';
      }
      if(in_array('1. Gruppe',$user->roles)){
        $groups[1][] = theme('hjv_user_line',$user,$status);
      }
      else if(in_array('2. Gruppe',$user->roles)){
        $groups[2][] = theme('hjv_user_line',$user,$status);
      }
      else if(in_array('3. Gruppe',$user->roles)){
        $groups[3][] = theme('hjv_user_line',$user,$status);
      }
      else{
        $groups[0][] = theme('hjv_user_line',$user,$status);
      }
    }
  }*/
  
  $base_functions = array(
    'GF',
    'NK/GVSK1', 
    'LMGSK',
    'LMGHJ',
    'DYKNSK',
    'DYKNHJ',
    'GVSK2/GRNDR',
    'GVSK3/SYHJ',
    'LMGSK/KØRER',
    'KØRER/GVSK/PVSK',
    /*'UDD/GVSK',
    'UDD/GVSK',*/
  );
  $groups = array(
    'Ledelse',
  	'1. Gruppe',
  	'2. Gruppe',
  	'3. Gruppe',
  );
  
 /* foreach( as $user){
    $u[] = user_load($user['uid']);
  }*/
  
  foreach($groups as $group){
    if($group == 'Ledelse'){
      $functions = array(
      	'DF',
    		'NK',
  			'SIGBM'
      );
      $sgroup = '';
    }
    else{
      $functions = $base_functions;
      $sgroup = $group;
    }
    
    foreach($functions as $function){
      $user = hjv_users_load_user_from_group_and_function($function,$sgroup);
      if(in_array($user->uid,$cleaned_attendees)){
        $status = 'go';
      }
      else if(in_array($user->uid,$cleaned_absentees)){
        $status = 'nogo';
      }
      else{
        $status = 'dontknow';
      }
      $matrix[$group][] = theme('hjv_user_line',$user,$function,$status);
    }
  }
  
  
  return '<div class="clear-block stab">'.theme('item_list',$matrix['Ledelse'],t('Ledelse'),'ul',array('class' => 'stab')).'</div>'.
  theme('item_list',$matrix['1. Gruppe'],t('1. Gruppe'),'ul',array('class' => 'grp1')).
  theme('item_list',$matrix['2. Gruppe'],t('2. Gruppe'),'ul',array('class' => 'grp2')).
  theme('item_list',$matrix['3. Gruppe'],t('3. Gruppe'),'ul',array('class' => 'grp3'));
}


function hjv_activity_block($op = 'list', $delta = 0, $edit = array()) {
  if ($op == 'list') {
    return array(
    0 => array('info' => t('Reset activity'), 'cache' => BLOCK_NO_CACHE),
    
    );
  }
  elseif ($op == 'view') {
    switch ($delta) {
      case 0:
        $block['content'] = l(t('Reset aktivitet'),'reset/'.arg(1));
        return $block;  
        break;

        
    }
  }
}

?>