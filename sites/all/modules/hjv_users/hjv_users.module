<?php 



function hjv_auth_scrape_user_register_form($form_state,$users){
  
  $form = user_register();
  
  $roles = $form['account']['roles'];
  
  dsm($form);
  
  
  $form = array();
  
  foreach($users as $ma_number => $u){
    
    $form['users'][$ma_number]['ignore'] = array(
      '#type' => 'checkbox',
    );
    $form['users'][$ma_number]['roles'] = $roles;
    
    $form['users'];
    
    
    #$form = drupal_get_form('hjv_auth_scrape_user_register_form',$u);
    
    #$rows[] = array(drupal_render($form['users'][$ma_number]['add']),$u['ma_number'], $u['name'],$u['phone'],findSuitableUsername($u['name']),$u['unit'],,$u['function']);
  }
  
 
  return $form;
  
return theme('table',array('','Employee number','Name','Phone','Username','Unit','Roles','Function'),$rows);
 
  
  
  
  #dsm($form);
  
  
  return $form;
  
  #return user_register_form($form_state);  
  
  #dsm($row);
}

function hjv_users_menu(){
    $items['user/add_soldiers'] = array(
    'page callback' => 'hjv_auth_scrape_add_soldiers',
    'title' => 'Add users from storage',
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}




function hjv_auth_scrape_add_soldiers(){
  
  #variable_set('temp_users',serialize(array()));
  
  $users = unserialize(variable_get('temp_users',''));
  
  #return drupal_get_form('hjv_auth_scrape_user_register_form',$users);
  
  
  
  foreach($users as $u){
    
 #   $form = drupal_get_form('hjv_auth_scrape_user_register_form',$u);
    
    $rows[] = array('<input type="submit" value="Tilføj" /><input type="submit" value="Ignorer" />',$u['ma_number'], $u['name'],$u['phone'],findSuitableUsername($u['name']),$u['unit'],drupal_render($roles),$u['function']);
  }
return theme('table',array('','Employee number','Name','Phone','Username','Unit','Roles','Function'),$rows);
  
}

function hjv_users_block($op = 'list', $delta = 0, $edit = array()) {
  if ($op == 'list') {
    return array(
    0 => array('info' => t('Test block'), 'cache' => BLOCK_NO_CACHE),
    1 => array('info' => t('Didn\'t signup yet'), 'cache' => BLOCK_NO_CACHE),
    
    );
  }
  elseif ($op == 'view') {
    switch ($delta) {
      case 0:
        
        module_load_include('php', 'hjv_auth_scrape', 'HJVformatMISC.class');
        
        $datestr = '19 OKT 10 1900 - 2100';
        
        list($start,$end) = HJVformatMISC::getStartAndEndTime($datestr);
        
        #$start = date('Y-m-d H:i',$start);
        #$start = new DateTime($start, new DateTimeZone('Europe/Copenhagen'));
        
        #$start = new DateTime($start, date_default_timezone(), DATE_ISO_FORMAT);
        
        #$start->setTimezone(new DateTimeZone('GMT'));
        
        #print $start->format('d-m-y H:i');
        
        
       # var_dump($start);
        
        
  
#  print $dateTime->getTimestamp();

  
  
  
 # $date = format_date($now,'short');
  #dsm($date);
  
  
  #echo $dateTime->format("Y-m-d H:i:s");
        
        
 #       var_dump($start);
        
        #var_dump($start);
        
        #dsm(date('dmy H:i',$start));
        
  #      dsm($start);
          
        return $block;  
        break;
      case 1:
        
        $node = node_load(arg(1));
        
        if($node->type != 'activity'){
          return;
        }
        
        $res = db_query('SELECT uid FROM users WHERE uid != 0');
        while($row = db_fetch_array($res)){
          $users[] = $row;
        }

        
        
        #var_dump($node);
        
        
        foreach($users as $user){
          if(!in_array($user,$node->field_attendees)){
            $not[] = $user;
          }
          else{
            $signed[] = $user;
          }
        }
        foreach($not as $n){
         if(!in_array($n,$node->field_absentees)){
            $notsigned[] = $n;
          }
          else{
            $notcomming[] = $n;
          }
        }
      /* var_dump($signed);
        print '<hr />';
        var_dump($not);
        print '<hr />';
        var_dump($notsigned);
        print '<hr />';
        var_dump($notcomming);*/
        
        $procent = sizeof($signed) / sizeof($users) * 100;
        
        $ialtprocent = (sizeof($signed)+sizeof($notsigned)) / sizeof($users) * 100;

        $out = t('Der er tilmeldt !tilmeldtprocent%. Hvis restanterne ikke melder fra bliver det !ialtprocent%',array('!tilmeldtprocent' => $procent, '!ialtprocent' => $ialtprocent));
        
        $users = array();
        
        foreach($notsigned as $notsigneduser){
          $user = user_load($notsigneduser['uid']);
          $users[] = theme('username',$user);
        }
        
        $list = theme('item_list',$users);
        
        $block['subject'] = t('Restanter');
        $block['content'] = '<p>'.t('Følgende brugere har endnu ikke angivet om de deltager eller ej').'</p>'.$list.'<p>'.$out.'</p>';
        return $block;
    }
  }
}

function hjv_users_get_signups_for_activity($node){
  
  $res = db_query('SELECT uid FROM users WHERE uid != 0');
  while($row = db_fetch_array($res)){
    $users[] = $row;
  }
  foreach($users as $user){
    if(is_array($node->field_attendees)){
      if(!in_array($user,$node->field_attendees)){
        $not[] = $user;
      }
      else{
        $signed[] = $user;
      }
    }
    else{
      $not[] = $user;
    }
  }
  if(is_array($not)){
    foreach($not as $n){
      if(is_array($node->field_absentees)){
        if(!in_array($n,$node->field_absentees)){
          $notsigned[] = $n;
        }
        else{
          $notcomming[] = $n;
        }
      }
    }
  }
  return array(
    'attendees' => $signed,
    'absentees' => $notcomming,
    'all' =>  $users,
  );
}

function hjv_users_get_signups_for_activity_responders($node){
  $responders = array();
  $signups = hjv_users_get_signups_for_activity($node);
  if(is_array($signups['attendees'])){
    foreach ($signups['attendees'] as $attendee){
      $responders[] = $attendee['uid'];
    }
  } 
  if(is_array($signups['absentees'])){
    foreach ($signups['absentees'] as $absentee){
      $responders[] = $absentee['uid'];
    }
  }
  return $responders;
}

function hjv_users_load_user_from_group_and_function($function,$group = null){
  $res = db_query('SELECT uid FROM {users}');
  while($user = user_load(db_result($res))){
    if($user->profile_function == $function){
      if($group == ''){
        return $user;  
      }
      if(is_array($user->roles)){
        if(in_array($group,$user->roles)){
          return $user;
        }
      }
    }
  }
}



?>